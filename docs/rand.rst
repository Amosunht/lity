================================================================
Rand - Get random number on the chain
================================================================

.. _rand:


.. WARNING::
   Lity supports built-in random function after lity v1.2.7.



Built-in Random Function
------------------------

Lity provides a new built-in function `rand` for the gaming Dapp developers.

The function prototype is `function rand() returns (uint)`. When calling `rand()`, developers will receive an random number which is generated by the following formula:

.. code-block:: Lity

  function rand() returns (uint) {
    return keccak256(Randomness Seed, Nonce, CodeHash, Counter);
  }


- The `Randomness Seed` is generated by Travis chain and you can find it in the difficulty field of current block header. This depends on current block. It will be the same until receiving the next block.

- The `Nonce` is nonce of the transaction origin and depends on the transaction order in current block.

- The `CodeHash` is the hash of caller's contract bytecode.

- The `Counter` will automaticlly increase after the `opRand` is called. This depends on the the called time of rand(). If you call `rand()` twice in same code block, you will receive different results.


Example 1
---------

.. code-block:: Lity

  pragma lity ^1.2.7;

  contract RandNumberExample {
    uint randnum;
    function getAndSetRandnum() public returns (uint) {
      randnum = rand();
      return randnum;
    }
  }

